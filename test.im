std     :: import "std";
complex :: import "complex";

SOLID    :: *"#".pointer;
ALMOST   :: *"*".pointer;
SOMEWHAT :: *"'".pointer;
EMPTY    :: *" ".pointer;
NEW_LINE :: *"\n".pointer;

true  :: 1 > 0;
false :: 0 > 1;

{
	y := 2.0;
	dy := 0b0.001;
	dx := 0b0.0001;
	loop :y_loop {
		x := 0.0 - 2.0;
		loop :x_loop {
			c := complex\create(x, y);
			z := complex\create(0.0, 0.0);

			iters := 0;
			is_valid := loop {
				z = complex\add(complex\mul(z, z), c);

				if z.real * z.real + z.imag * z.imag >= 4.0 {
					skip loop (false);
				};

				iters = iters + 1;
				if iters > 50 {
					skip loop (true);
				};
			};

			put_char(if is_valid { SOLID } else { if iters > 20 { ALMOST } else { if iters > 10 { SOMEWHAT } else { EMPTY }}});

			x = x + dx;
			if x > 2.0 {
				skip :x_loop;
			};
		};

		put_char(NEW_LINE);

		y = y - dy;
		if y < 0.0 - 2.0 {
			skip :y_loop;
		};
	};
};
